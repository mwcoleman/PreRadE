GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
Start to load Faster-RCNN detected objects from /media/matt/data21/mmRad/img_features/mscoco-train_2017-custom.tsv
Loaded 5000 images in file /media/matt/data21/mmRad/img_features/mscoco-train_2017-custom.tsv in 8 seconds.
Start to load Faster-RCNN detected objects from /media/matt/data21/mmRad/img_features/mscoco-val_2017-custom.tsv
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Loaded 5000 images in file /media/matt/data21/mmRad/img_features/mscoco-val_2017-custom.tsv in 8 seconds.
  | Name                 | Type                       | Params
--------------------------------------------------------------------
0 | model                | VisualBertModel            | 110 M
1 | text_prediction_head | VisualBertLMPredictionHead | 24.1 M
2 | seq_relationship     | Linear                     | 1.5 K
3 | transform_img_ft     | Linear                     | 1.0 M
4 | transform_img_box    | Linear                     | 5.1 K
5 | transform_ln_ft      | LayerNorm                  | 2.0 K
6 | transform_ln_box     | LayerNorm                  | 2.0 K
--------------------------------------------------------------------
135 M     Trainable params
0         Non-trainable params
135 M     Total params
543.152   Total estimated model params size (MB)
/home/matt/anaconda3/envs/lxmert/lib/python3.8/site-packages/pytorch_lightning/trainer/data_loading.py:105: UserWarning: The dataloader, val dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 12 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/matt/anaconda3/envs/lxmert/lib/python3.8/site-packages/transformers/tokenization_utils_base.py:2211: FutureWarning: The `pad_to_max_length` argument is deprecated and will be removed in a future version, use `padding=True` or `padding='longest'` to pad to the longest sequence in the batch, or use `padding='max_length'` to pad to a max length. In this case, you can give a specific length with `max_length` (e.g. `max_length=45`) or leave max_length to None to pad to the maximal input size of the model (e.g. 512 for Bert).
  warnings.warn(
/home/matt/anaconda3/envs/lxmert/lib/python3.8/site-packages/pytorch_lightning/trainer/data_loading.py:105: UserWarning: The dataloader, train dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 12 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/matt/anaconda3/envs/lxmert/lib/python3.8/site-packages/pytorch_lightning/trainer/data_loading.py:326: UserWarning: The number of training samples (19) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.
  rank_zero_warn(
Validation sanity check:   0%|                                                                                                                                                                                            | 0/2 [00:00<?, ?it/s]
Training: -1it [00:00, ?it/s]






Epoch 0:  49%|█████████████████████████████████████████████████████████████▍                                                                | 19/39 [00:13<00:13,  1.52it/s, loss=8.63, v_num=1qxn, train_loss_step=7.960, train_acc_step=18.90]
Validating:   0%|                                                                                                                                                                                                        | 0/20 [00:00<?, ?it/s]
Epoch 0:  59%|██████████████████████████████████████████████████████████████████████████▎                                                   | 23/39 [00:14<00:09,  1.67it/s, loss=8.63, v_num=1qxn, train_loss_step=7.960, train_acc_step=18.90]



Validating:  95%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍         | 19/20 [00:07<00:00,  2.58it/s]






Epoch 1:  51%|▌| 20/39 [00:13<00:11,  1.60it/s, loss=7.62, v_num=1qxn, train_loss_step=7.470, train_acc_step=24.50, val_loss_step=7.780, val_acc_step=23.70, val_loss_epoch=7.870, val_acc_epoch=19.80, train_loss_epoch=8.600, train_acc_epoch=
Validating:   0%|                                                                                                                                                                                                        | 0/20 [00:00<?, ?it/s]
Epoch 1:  56%|▌| 22/39 [00:13<00:10,  1.65it/s, loss=7.62, v_num=1qxn, train_loss_step=7.470, train_acc_step=24.50, val_loss_step=7.780, val_acc_step=23.70, val_loss_epoch=7.870, val_acc_epoch=19.80, train_loss_epoch=8.600, train_acc_epoch=




Validating:  95%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍         | 19/20 [00:07<00:00,  2.58it/s]





Epoch 2:  51%|▌| 20/39 [00:13<00:12,  1.57it/s, loss=7.27, v_num=1qxn, train_loss_step=7.220, train_acc_step=24.10, val_loss_step=7.420, val_acc_step=23.10, val_loss_epoch=7.250, val_acc_epoch=25.60, train_loss_epoch=7.600, train_acc_epoch=
Validating:   0%|                                                                                                                                                                                                        | 0/20 [00:00<?, ?it/s]
Epoch 2:  56%|▌| 22/39 [00:14<00:10,  1.62it/s, loss=7.27, v_num=1qxn, train_loss_step=7.220, train_acc_step=24.10, val_loss_step=7.420, val_acc_step=23.10, val_loss_epoch=7.250, val_acc_epoch=25.60, train_loss_epoch=7.600, train_acc_epoch=




